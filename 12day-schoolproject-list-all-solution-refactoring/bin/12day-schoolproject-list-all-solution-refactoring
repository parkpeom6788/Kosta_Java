**12day-schoolproject-list-all-solution-refactoring**

리팩토링(refactoring) : 입출력 변경없이 코드 내부 구조를 개선하는 활동
									-> 가독성을 높이고 유지보수성을 향상시키기 위해 

- school project list version의 비즈니스 로직을 담당하는 SchoolService를 대상으로 
refactoring -> 입출력 변경없이 프로그램 내부 구조를 개선 

SchoolService 의 주요 업무는 구성원 추가 , 검색 , 삭제 , 수정 이다
기존 SchoolService 에서는 구성원 추가시 tel 중복여부를 확인 하기 위해
전달받은 구성원의 tel 과 리스트에 저장된 요소의 tel을 비교 하는 작업을 코드로 작성했다

또한 검색 , 삭제 , 수정 시에도 매개변수로 전달받은 정보의 tel 과
리스트 요소의 tel을 비교 하는 로직이 중복되어 코드를 작성했다

이런 반복적인 내부구조를 개선 하기 위한 리팩토링 방안은 다음과 같다

4가지 메서드 공통 전화번호에 따른 리스트 요소의 위치(position or index)를 반환하는 메서드를 별도로 구현한다
만약 tel에 일치하는 리스트 요소가 없다면 -1 반환 (list 의 index의 0부터 시작하므로)

public int findIndexByTel(String tel) {
		int index = -1;
		// 내부 탐색 
		return index;
} 	
*** 13일차 주요목차 ***
- java.util.Map -> 복습해오기 
- school mini project
- Stack , Queue
- Exception Handling





								