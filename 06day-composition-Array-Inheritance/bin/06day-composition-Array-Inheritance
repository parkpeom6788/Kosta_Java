	** 6day 주요 목차 **
	- composition (
	- Array ( 배열 )
	- Inheritance ( 상속 ) => 예습   java 상속 예제 검색해서 예습 해오기
	------------------------
	- composition
	class diagram 상의 relation : association > aggregation > composition
	-composition : consist of  ex) 자동차는 엔진과 바퀴와 같은 구성요소로 구성된다 
	
	- Array( 배열 ) - 정적배열 배열의 크기가 고정됨 
	: 다수의 데이터를 저장하고 효과적으로 관리하기 위한 객체
	1) Primitive Data (기본형 데이터 ) Array
		
		배열 선언 
		int[] ages; // int[] int형의 배열 데이터타입 , int ages[]; 동일한 표현임 
			
		배열생성
		ages = new int[3]; // 3개의 요소를 담을 수 있는 배열 객체 생성 공간이 3개가 만들어진다 3 => length (배열길이)
		배열 요소 할당
		ages[0] = 11;  // index 는 0부터 시작 
		ages[1] = 20; //  
		ages[2] = 28;
		
		// 배열크기 못바꿈 -> 공간을 늘려 복사해서 값을 넣어줌
		// 정적배열 
	2) Reference Data (참조형 데이터 ) Array 
	
		배열선언
		Person[] pa;
		배열생성
		pa = new Person[3]; // Person 객체를 3개 저장할 수 있는 배열 객체 생성
		배열 요소 할당
		pa[0] = new Person("손석구"30 ,); // 배열의 첫번째 공간에 Person 객체 주소값 할당
		첫번째 요소의 name을 출력
		System.out.println(pa[0].getName());
		
		배열 선언 , 생성 , 할당 동시에
		Person[] pa = {new Person("손석구",30), new Person("아이유",31)}; // length 2인 배열 생성하고 할당
		
		- 이차원 배열
		int[][] rain = new int[3][12]; // 3년간 매월 강우량을 저장 
		// 첫해 첫월 강우량 저장
		rain[0][0]=100;
		int[][] ms = new int[3][]; // 중학교 3학년 1,2,3 학년 각반원의 인원수를 저장 , 1학년 2반 , 2학년 3반 ,3학년 5반
		ms[0] = new int[2];  // 1학년 2반으로 구성
		ms[1] = new int[3];  // 2학년 3반으로 구성
		ms[3] = new int[5];  // 3학년 5반으로 구성
		
		 
		
		
	
	
	
	
	
	
	