
** 10일차 주요 목차 **
	-	interface
	-	java.util.Collection : Set , List , Map
	-  HttpServlet (상속) -> GenericServlet - > Servlet ( 최고 인터페이스 )
	--------------------------------------------
	- interface : 자바 인터페이스
						★다양한 계층 구조 형성을 통한 다형성 적용★
						인터페이스를 이용하면 다양한 계층 구조 형성을 통해
						다형성을 극대화 ( 자바는 단일 상속이고 다중상속의 장점을 인터페이스로 채택)
						상속과의 차이점
						★ 인터페이스는 상속의 장점 중 멤버를 하위에게 물려주지는 않음  
						다양한 계층 구조 형성에 촛점을 맞춘다 
						인터페이스는 객체화 될 수 없다 ( abstract class 와 공통적인 면 )
						★ 인터페이스는 인스턴스 변수와 구현된 객체의 멤버 메서드를 가질 수 없다 ★ 
						( jdk 1.8 이상 에서는 default 메서드와 static 메서드를 가질 수 있다 ) 
						참고 ) 
						상속의 장점 -> 부모 멤버를 물러받아 재사용
										계층 구조 형성을 통한 다형성 적용 환경 
										자바는 단일 상속이므로 단일 계층구조
										다양한 계층구조 형성은 자바 인터페이스를 이용
						다형성의 장점 -> 하나의 변수로 여러 객체를 참조하는 성질 		
												  하나의 소통방식으로 다향안 객체들이 각자의 방식으로 동작하는 성질
												( 실세계 ex - 운전법(소통방식)을 익히면 소나타, k5, SM6 등의 다양한 자동차(객체)들을 운행 할수 있다.		    
															ex - 재생버튼(소통방식) 하나를 익히면 유투브 , 곰플레이어 , CD Player 등의
																	다양한 재생기(객체)들을 재생시킬 수 있다 
					 - 인터페이스 장점 ( ~ 할수있는 )
					 	인터페이스 문법 : interface 는 public static final 상수와 abstract method로 구성
					 	public interface Flyer  {
					 		String ID = "javaking"; // public static final 로 자동 인식 : static 상수 , - 객체가 아니니까 static final로 , 상수명은 대문자로 씀  
					 		void fly(); // 구변부를 가질수없는데  public abstract로 자동 인식 -> 추상 메서드 역할 : 하위에게 구현 강제 
					 }
					public class Bird implements Flyer{ // 상속은 extends 인터페이스 구현은 implements 
					// 반드시 상위 인터페이스의 추상 메서드를 구현해야 한다 
					public void fly() {
						구현부 
					}
					 	
					 - 인터페이스의 일반적 의미 : 사용하는 측과 구현 즉 서비스를 제공하는 측과의 약속 or 소통법 
					 - abstract vs interface 차이점 
					 : abstract 는 상속이고 , interface 는 구현강조 
		상속 다형성 : 단일한 계층 구조 형성 을 통한 
		인터페이스 다형성 : 다양한 계층 구조 형성을 통한 
		
		- abstract class vs interface
			-> abstract class 와 interface 를 비교 설명 하세요 공통점 과 차이점을 설명하세요
			
			공통점 : 직접 객체화 할수 없다 -> 부모 또는 상위 타입으로 계층 구조를 형성 -> 다형성 적응 환경
						abstract method 로 하위 클래스에게 구현을 강제 한다 
						시스템의 표준화 할 수 있다. 
						abstract			    		interface
			차이점 : 단일 계층 구조       다양한 계층 구조
			 객체멤버를 상속시킴(super)o	 객체멤버를 상속 시킬수 없음 ( 인스턴스변수를 가질수없으므로 - 상수만 ) 
			 	  		extends 						implements 		 	  		
			 	 자바의 다중상속의 장점을 인터페이스
			 	 자바는 단일상속이다.
		  
		  - Collection API ( 자바 자료구조 )
		  java.util.Collection interface : 모든 자바 자료구조체(ArrayList,HashSet 등)의 최상위 인터페이스	- 장점 : 표준 사용법이 정해진다  	  		
		  
		  Set 계열 : 요소의 중복을 인정하지 않는 자료구조체 계열 
		  List 계열 : index 로 관리 , 요소들을 index 순서로 저장 
		  Map 계열 : key 와 value로 관리 
		  
	** 11일차 주요목차 **
	java Collection
	List 계열의 ArrayList 
	mini project : 분석 ,설계 ,구현 까지 - 조별 단위 설계 , 다이어그램 까지 	  
		  
		  
		  
		  
		  
		  	 	  										
						 
				 
